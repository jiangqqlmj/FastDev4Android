apply plugin: 'com.android.application'
apply plugin: 'android-apt'
def AAVersion = '3.3.2'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId "com.chinaztt.fda.ui"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 4
        versionName "1.1.2"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/org.apache.http.legacy.jar')
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile 'com.wang.avi:library:1.0.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'me.imid.swipebacklayout.lib:library:1.0.0'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    //由于我本地采用Volley源码库依赖的,因为需要修改Volley源代码，后期会上传Volley修改之后的代码
    //这边大家要使用Volley库的时候，直接打开下面的引入方式即可
    //compile 'com.mcxiaoke.volley:library:1.0.19'
    compile files('libs/gson-2.2.4.jar')
    compile project(':Volley')
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}


